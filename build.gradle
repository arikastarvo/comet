/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

plugins {
	
	// Apply the java-library plugin to add support for Java Library
    id 'java-library'
	id 'distribution'
	id "com.github.johnrengelman.shadow" version "5.2.0"
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}


tasks.withType(Tar){
	compression = Compression.GZIP
}

// package shit as one uberjar in one ubertargz
distributions {
	main {
		contents {
			into("lib") {
				from "build/libs"
			}
			into("bin") {
				fileMode 0755
				include "comet.env.sh"
				from ("src/bin")
			}
			into("bin") {
				fileMode 0755
				include "comet"
				from ("src/bin")
			}
			into ("") {
				from "."
				include('README.md')
			}
			into("") {
				from "."
				include "gradle.properties"
				rename { "application.properties" }
			}
		}
	}
}


jar {
	manifest {
		attributes(
			'Main-Class': 'com.github.arikastarvo.comet.CometApplication',
			'Multi-Release': 'true' // THIS IS FOR MUTING AN ANNOYING WARNING:
		)
	}
}

compileJava {
    sourceCompatibility = '11'
    targetCompatibility = '11'
}

task appprops(type: Copy) {
	from file("gradle.properties")
	into file("$buildDir/resources/main")
	rename "gradle.properties", "application.properties"
}

shadowJar {
    dependsOn appprops
}


configurations.runtime {
	exclude group: 'org.slf4j', module: 'slf4j-nop'
	exclude group: 'org.apache.logging.log4j', module: 'log4j-to-slf4j'
	exclude group: 'ch.qos.logback', module: 'logback-classic'
}

dependencies {
	
	implementation 'com.jsoniter:jsoniter:0.9.23'
	implementation 'org.yaml:snakeyaml:1.24'
	implementation 'net.sourceforge.argparse4j:argparse4j:0.8.1'
	
	/** fancy and hip replacement for plain old regex **/
	//implementation 'com.nflabs:grok:0.1.0'
	implementation 'io.krakens:java-grok:0.1.9'

	// for annotation scanning
	implementation 'io.github.classgraph:classgraph:4.8.105'
	
	/**
	 * esper
	 */
	implementation 'com.espertech:esper-common:8.5.0'
	implementation 'com.espertech:esper-compiler:8.5.0'
	implementation 'com.espertech:esper-runtime:8.5.0'
	implementation 'com.espertech:esper-common-avro:8.5.0'
	
	implementation 'org.slf4j:slf4j-api:1.7.30'
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.13.1'
	implementation 'org.apache.logging.log4j:log4j-core:2.13.1'
	//implementation 'org.slf4j:slf4j-nop:1.7.30'
	
	// for inet calculations
	implementation 'com.github.seancfoley:ipaddress:5.3.1'
	
	// maxmind 
	implementation 'com.maxmind.geoip2:geoip2:2.14.0'
	
	// dns
	implementation 'dnsjava:dnsjava:3.3.1'
	
	// sqlite jdbc - not using currently
	implementation 'org.xerial:sqlite-jdbc:3.32.3.2' 
	implementation 'org.apache.commons:commons-dbcp2:2.8.0' // this is for connection pooling
	
	// h2 
	//implementation 'com.h2database:h2:1.4.200'

	
	/** apache helper utility packages **/
	implementation 'org.apache.commons:commons-text:1.7'
	implementation 'org.apache.commons:commons-lang3:3.11'
	implementation 'org.apache.commons:commons-email:1.5'
	implementation 'commons-io:commons-io:2.7'
	implementation 'org.apache.httpcomponents:httpclient:4.5.10'
	
	/** csv **/
	implementation 'com.opencsv:opencsv:5.1'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
	
}


distTar.dependsOn shadowJar
build.dependsOn distTar

javadoc {
	options.overview = "src/overview.html"
}


jar {
	enabled = false
}
